// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shopApi.Contexts;

namespace shopApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200228184436_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("shopApi.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColorName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorName = "Yellow"
                        },
                        new
                        {
                            Id = 2,
                            ColorName = "Pink"
                        },
                        new
                        {
                            Id = 3,
                            ColorName = "Black"
                        },
                        new
                        {
                            Id = 4,
                            ColorName = "White"
                        });
                });

            modelBuilder.Entity("shopApi.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("shopApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("shopApi.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("shopApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://picsum.photos/id/204/5184/3456",
                            Info = "En sak. Standard",
                            Name = "Sak",
                            Price = 50.0
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://picsum.photos/id/19/2500/1667",
                            Info = "Likadan som den andra saken fast en annan.",
                            Name = "Annan sak",
                            Price = 30.0
                        },
                        new
                        {
                            Id = 3,
                            Image = "https://picsum.photos/id/144/4912/2760",
                            Info = "Troligtvis en sak men också lite oklart.",
                            Name = "Kanske en sak",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 4,
                            Image = "https://picsum.photos/id/164/1200/800",
                            Info = "Hög med saker. Inte så fina.",
                            Name = "Lite fula saker",
                            Price = 1005.0
                        },
                        new
                        {
                            Id = 5,
                            Image = "https://picsum.photos/id/131/4698/3166",
                            Info = "En väldigt fin sak. Och billig.",
                            Name = "Fin sak",
                            Price = 5.0
                        },
                        new
                        {
                            Id = 6,
                            Image = "https://picsum.photos/id/154/3264/2176",
                            Info = "Två udda saker. Precis som namnet beskriver.",
                            Name = "Två udda saker",
                            Price = 99.0
                        });
                });

            modelBuilder.Entity("shopApi.Models.Order", b =>
                {
                    b.HasOne("shopApi.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("shopApi.Models.OrderItem", b =>
                {
                    b.HasOne("shopApi.Models.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shopApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
